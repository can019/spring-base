name: "Junit5"
on:
  push:
    branches:
      - 'main'
      - 'release'
  pull_request:
    branches:
      - '**'
      # - '*'         # matches every branch that doesn't contain a '/'
      # - '*/*'       # matches every branch containing a single '/'
      # - '**'        # matches every branch
      # - '!main'   # excludes main
jobs:

  Unit:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
              ${{ runner.os }}-gradle-

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: gradle build
        run: ./gradlew build

      - name: Run test
        run: ./gradlew unitTest

      - name: test
        run: cd build/test-results && ls -al

      - name: publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/unitTest/test/TEST-*.xml


  Integration:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: gradle build
        run: ./gradlew build

      - name: Run test
        run: ./gradlew integrationTest

      - name: test
        run: ls ./build/test-results
      - name: publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/integrationTest/test/TEST-*.xml