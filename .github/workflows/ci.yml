name: "CI"
on:
  pull_request:
    branches:
      - '**'
      # - '*'         # matches every branch that doesn't contain a '/'
      # - '*/*'       # matches every branch containing a single '/'
      # - '**'        # matches every branch
      # - '!main'   # excludes main
  release:
    types: [published]

jobs:
  gradle-task:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout to pr branch
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up gradle with gradle cache
        uses: gradle/actions/setup-gradle@v3
        continue-on-error: true
        with:
          add-job-summary-as-pr-comment: on-failure
          gradle-version: 8.8
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}

      - name: Build
        run: gradle build --configuration-cache --info
        continue-on-error: true

      - name: Generate unit jacoco report
        run: gradle unitTestJacocoReport --configuration-cache

      - name: Generate integration jacoco report
        run: gradle integrationTestJacocoReport --configuration-cache

      - name: Generate over all jacoco report
        run: gradle overAllJacocoTestReport --configuration-cache

      - name: Generate OpenApi3 yml
        run: gradle openapi3 -x check

      - name: Generate javadoc
        run: gradle javadoc -x check

      - name: Sonar cloud analysis
        run: gradle sonar --configuration-cache --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Save test reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            build/reports
            build/test-results
            build/api-spec
            build/docs

      - name: Save build artifacts
        if: github.event.action == 'published'
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            build/classes
            build/generated
            build/libs
            build/resources

  publish-junit-result-pr-comment:
    if: github.event_name == 'pull_request'
    needs: [gradle-task]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: build

      - name: Check all dir
        run: ls -R

      - name: publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: './build/test-results/unitTest/TEST-*.xml'
          check_name: 'Unit test'

      - name: publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: './build/test-results/integrationTest/TEST-*.xml'
          check_name: 'Integration test'

  set-github-pages-resource:
    if: always() && github.event.action == 'published'
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [gradle-task]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Get commit ID
        id: get_commit_id
        run: echo "::set-output name=commit_id::$(git rev-parse HEAD)"

      - name: Get release version
        id: get_release_version
        run: echo "::set-output name=release_version::${{ github.event.release.tag_name }}"

      - name: Set environment variable
        run: |
          echo "COMMIT_ID=${{ steps.get_commit_id.outputs.commit_id }}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${{ steps.get_release_version.outputs.release_version }}" >> $GITHUB_ENV

      - name: Save scripts, config
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            .github/scripts/link_docs.py
            .github/scripts/add_swagger_url.py

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'

      - name: Configure Git # commit을 위한 git config 설정
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Set python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Download scripts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: .

      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: build

      - name: ls
        run: ls -R

      - name: Create commit id directory
        run: mkdir -p docs/release/$RELEASE_VERSION

      - name: Create release version index.md
        run: |
          echo "# List" > docs/release/$RELEASE_VERSION/index.md

          git add docs/release/$RELEASE_VERSION/index.md -f
          git commit -m "docs: Init $RELEASE_VERSION ($COMMIT_ID) index.md"

      - name: Commit junit5 reports
        run: |
          cp -R build/reports/tests docs/release/$RELEASE_VERSION

          echo "## Test reports" > docs/release/$RELEASE_VERSION/tests/index.md
          echo "[Unit](/unitTest/index.html) | [Integration](integrationTest/index.html)" >> docs/release/$RELEASE_VERSION/tests/index.md

          echo "- [Junit5](tests/index.md)" >> docs/release/$RELEASE_VERSION/index.md

          git add docs/release/$RELEASE_VERSION/tests -f
          git add docs/release/$RELEASE_VERSION/index.md -f

          git status

          git commit -m "docs: Junit5 reports release $RELEASE_VERSION ($COMMIT_ID)"

      - name: Commit jacoco reports
        run: |
          cp -R build/reports/jacoco docs/release/$RELEASE_VERSION

          echo "## Coverage reports" > docs/release/$RELEASE_VERSION/jacoco/index.md
          echo "[Total](total/html/index.html)  | [Unit](unitTest/html/index.html) | [Integration](integrationTest/html/index.html)" >> docs/release/$RELEASE_VERSION/jacoco/index.md

          echo "- [Jacoco](jacoco/index.md)" >> docs/release/$RELEASE_VERSION/index.md

          git add docs/release/$RELEASE_VERSION/jacoco -f
          git add docs/release/$RELEASE_VERSION/index.md -f

          git status

          git commit -m "docs: Jacoco reports release $RELEASE_VERSION ($COMMIT_ID)"

      - name: Commit javadoc
        run: |
          cp -R build/docs/javadoc docs/release/$RELEASE_VERSION
          
          echo "- [Javadoc](javadoc/index.html)" >> docs/release/$RELEASE_VERSION/index.md
          
          git add docs/release/$RELEASE_VERSION/javadoc -f
          git add docs/release/$RELEASE_VERSION/index.md -f
          
          git status

          git commit -m "docs: Javadoc release $RELEASE_VERSION ($COMMIT_ID)"

      - name: Install python3 dependencies for add openapi3 url to swagger config script
        run: pip3 install pyyaml

      - name: Add url to swagger config
        run: |
          cat docs/swagger-ui/swagger-config.yaml
          python3 add_swagger_url.py -u https://can019.github.io/spring-base/release/$RELEASE_VERSION/openapi3.yaml -n $RELEASE_VERSION -f docs/swagger-ui/swagger-config.yaml
          cat docs/swagger-ui/swagger-config.yaml
          
          echo "- [Swagger](https://can019.github.io/spring-base/swagger-ui/index.html?urls.primaryName=$RELEASE_VERSION)" >> docs/release/$RELEASE_VERSION/index.md
          
          git add docs/swagger-ui/swagger-config.yaml -f
          git add docs/release/$RELEASE_VERSION/index.md -f
          git commit -m "chore: Add $RELEASE_VERSION ($COMMIT_ID) openapi3.yaml"

      - name: Commit Openapi3 yaml
        run: |
          cp -R build/api-spec/openapi3.yaml docs/release/$RELEASE_VERSION
          ls docs/release/$RELEASE_VERSION
          
          git add docs/release/$RELEASE_VERSION/openapi3.yaml -f
          
          git status
          
          git commit -m "chore: Add openapi3 resource release $RELEASE_VERSION ($COMMIT_ID)"

      - name: Link docs
        run: |
          cat docs/release/index.md
          python3 link_docs.py -f docs/release/index.md -c "- [$RELEASE_VERSION]($RELEASE_VERSION/index.md)"
          cat docs/release/index.md
          
          git add docs/release/index.md -f
          git commit -m "docs: Link $RELEASE_VERSION ($COMMIT_ID)"


      - name: Push changes to gh-pages branch
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}